// Header generated by RemObjects Elements for Cocoa 

#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>

#import <RemObjects.Elements.Linq.h>
#import <CommonCrypto/CommonDigest.h>
#import <objc/NSObject.h>
#import <Foundation/Foundation.h>
#import <libxml/tree.h>
#import <libxml/xmlstring.h>
#import <UIKit/UIKit.h>
#import <objc/runtime.h>
#import <objc/objc.h>
#import <CoreGraphics/CoreGraphics.h>

@class AutoResetEvent;
@class ManualResetEvent;
@class Semaphore;
@class Thread;
@class ThreadPool;
@class XmlAttribute;
@class XmlCharacterData;
@class XmlCDataSection;
@class XmlComment;
@class XmlText;
@class UserSettings;
@class UserSettingsHelper;
@class Group;
@class Match;
@class Regex;
@class String;
@class StringBuilder;
@class StringFormatter;
@class Url;
@class XmlDocument;
@class XmlDocumentDeclaration;
@class JsonObject;
@class JsonTokenizer;
@class JsonValue;
@class JsonStringValue;
@class JsonIntegerValue;
@class JsonFloatValue;
@class JsonBooleanValue;
@class TimeZone;
@class XmlDocumentType;
@class XmlElement;
@class XmlNode;
@class XmlNamespace;
@class XmlChar;
@class XmlNodeList;
@class XmlProcessingInstruction;
@class JsonDocument;
@class JsonNode;
@class SugarUnexpectedTokenException;
@class SugarInvalidTokenException;
@class SugarInvalidValueException;
@class JsonArray;
@class Type;
@class Stack;
@class StackHelpers;
@class Color;
@class Consts;
@class Convert;
@class MessageDigest;
@class DateFormatter;
@class DateTimeHelpers;
@class DateTime;
@class Queue;
@class RangeHelper;
@class Binary;
@class Dictionary;
@class DictionaryHelpers;
@class HashSet;
@class HashsetHelpers;
@class KeyValuePair;
@class KeyValue;
@class List;
@class NullHelper;
@class ListHelpers;
@class Encoding;
@class EncodingHelpers;
@class Folder;
@class FolderHelper;
@class FolderUtils;
@class Path;
@class Math;
@class Random;
@class MethodInfo;
@class ParameterInfo;
@class FileUtils;
@class Environment;
@class SugarException;
@class SugarNotImplementedException;
@class SugarNotSupportedException;
@class SugarArgumentException;
@class SugarArgumentNullException;
@class SugarArgumentOutOfRangeException;
@class SugarFormatException;
@class SugarIOException;
@class SugarFileNotFoundException;
@class SugarStackEmptyException;
@class SugarInvalidOperationException;
@class SugarKeyNotFoundException;
@class SugarAppContextMissingException;
@class SugarNSErrorException;
@class ErrorMessage;
@class Guid;
@class HttpRequest;
@class HttpRequestContent;
@class HttpBinaryRequestContent;
@class HttpResponse;
@class HttpResponseContent;
@class Http;
@class File;
@class FileHandle;
@class Locale;
@class Sugar_Linq__Extensions;

typedef enum ThreadState: int32_t {
    ThreadState_Unstarted = 0,
    ThreadState_Running = 1,
    ThreadState_Waiting = 2,
    ThreadState_Stopped = 3
  } ThreadState;

typedef enum ThreadPriority: int32_t {
    ThreadPriority_Lowest = 0,
    ThreadPriority_BelowNormal = 1,
    ThreadPriority_Normal = 2,
    ThreadPriority_AboveNormal = 3,
    ThreadPriority_Highest = 4
  } ThreadPriority;

typedef enum RegexOptions: int32_t {
    RegexOptions_IgnoreCase = 1,
    RegexOptions_IgnoreWhitespace = 2,
    RegexOptions_Multiline = 4,
    RegexOptions_Singleline = 8
  } RegexOptions;

typedef enum JsonTokenKind: int32_t {
    JsonTokenKind_BOF = 0,
    JsonTokenKind_EOF = 1,
    JsonTokenKind_Whitespace = 2,
    JsonTokenKind_String = 3,
    JsonTokenKind_Number = 4,
    JsonTokenKind_Null = 5,
    JsonTokenKind_True = 6,
    JsonTokenKind_False = 7,
    JsonTokenKind_ArrayStart = 8,
    JsonTokenKind_ArrayEnd = 9,
    JsonTokenKind_ObjectStart = 10,
    JsonTokenKind_ObjectEnd = 11,
    JsonTokenKind_NameSeperator = 12,
    JsonTokenKind_ValueSeperator = 13,
    JsonTokenKind_Identifier = 14,
    JsonTokenKind_SyntaxError = 15
  } JsonTokenKind;

typedef enum XmlNodeType: int32_t {
    XmlNodeType_None = 0,
    XmlNodeType_Attribute = 1,
    XmlNodeType_CDATA = 2,
    XmlNodeType_Comment = 3,
    XmlNodeType_Document = 4,
    XmlNodeType_DocumentType = 5,
    XmlNodeType_Element = 6,
    XmlNodeType_ProcessingInstruction = 7,
    XmlNodeType_Text = 8
  } XmlNodeType;

typedef enum DigestAlgorithm: int32_t {
    DigestAlgorithm_MD5 = 0,
    DigestAlgorithm_SHA1 = 1,
    DigestAlgorithm_SHA256 = 2,
    DigestAlgorithm_SHA384 = 3,
    DigestAlgorithm_SHA512 = 4
  } DigestAlgorithm;

typedef struct TimeSpan TimeSpan;
typedef struct Range Range;
typedef enum TargetPlatform: int32_t {
    TargetPlatform_Net = 0,
    TargetPlatform_Java = 1,
    TargetPlatform_macOS = 2,
    TargetPlatform_OSX = 2,
    TargetPlatform_iOS = 3,
    TargetPlatform_tvOS = 4,
    TargetPlatform_watchOS = 5,
    TargetPlatform_Android = 6,
    TargetPlatform_WinRT = 7,
    TargetPlatform_WindowsPhone = 8
  } TargetPlatform;

typedef enum CompilerMode: int32_t {
    CompilerMode_Echoes = 0,
    CompilerMode_Toffee = 1,
    CompilerMode_Cooper = 2,
    CompilerMode_Island = 3
  } CompilerMode;

typedef enum CompilerSubMode: int32_t {
    CompilerSubMode_NetFull = 0,
    CompilerSubMode_NetCore = 1,
    CompilerSubMode_WinRT = 2,
    CompilerSubMode_WindowsPhone = 3,
    CompilerSubMode_macOS = 4,
    CompilerSubMode_iOS = 5,
    CompilerSubMode_tvOS = 6,
    CompilerSubMode_watchOS = 7,
    CompilerSubMode_PlainJava = 8,
    CompilerSubMode_Android = 9,
    CompilerSubMode_Windows = 10,
    CompilerSubMode_Linux = 11
  } CompilerSubMode;

typedef enum OperatingSystem: int32_t {
    OperatingSystem_Unknown = 0,
    OperatingSystem_Windows = 1,
    OperatingSystem_Linux = 2,
    OperatingSystem_macOS = 3,
    OperatingSystem_iOS = 4,
    OperatingSystem_tvOS = 5,
    OperatingSystem_watchOS = 6,
    OperatingSystem_Android = 7,
    OperatingSystem_WindowsPhone = 8,
    OperatingSystem_Xbox = 9
  } OperatingSystem;

typedef enum GuidFormat: int32_t {
    GuidFormat_Default = 0,
    GuidFormat_Braces = 1,
    GuidFormat_Parentheses = 2
  } GuidFormat;

typedef enum HttpRequestMode: int32_t {
    HttpRequestMode_Get = 0,
    HttpRequestMode_Post = 1,
    HttpRequestMode_Head = 2,
    HttpRequestMode_Put = 3,
    HttpRequestMode_Delete = 4,
    HttpRequestMode_Patch = 5,
    HttpRequestMode_Options = 6,
    HttpRequestMode_Trace = 7
  } HttpRequestMode;

typedef enum FileOpenMode: int32_t {
    FileOpenMode_ReadOnly = 0,
    FileOpenMode_Create = 1,
    FileOpenMode_ReadWrite = 2
  } FileOpenMode;

typedef enum SeekOrigin: int32_t {
    SeekOrigin_Begin = 0,
    SeekOrigin_Current = 1,
    SeekOrigin_End = 2
  } SeekOrigin;

typedef void(^HttpResponseBlock)(HttpResponse * Response);
@interface AutoResetEvent: NSObject
@end

@interface ManualResetEvent: NSObject
@end

@interface ThreadPool: NSObject
@end

@interface XmlNode: NSObject

- (BOOL)isEqual:(id)obj;
- (NSString *)description;

@property (readonly,strong) /* mapped */ NSString *Name;
@property (strong) /* mapped */ NSString *Value;
@property (readonly,strong) /* mapped */ NSString *LocalName;
@property (readonly,assign) XmlNodeType NodeType;
@property (strong) XmlDocument *Document;
@property (strong) XmlDocument *OwnerDocument;
@property (readonly,strong) XmlNode *Parent;
@property (readonly,strong) XmlNode *NextSibling;
@property (readonly,strong) XmlNode *PreviousSibling;
@property (readonly,strong) XmlNode *FirstChild;
@property (readonly,strong) XmlNode *LastChild;
@property (readonly,strong) XmlNode *Item;
@property (readonly,assign) int32_t ChildCount;
@property (readonly,assign) XmlNode * * /* dynamicarray */ ChildNodes;

@end

@interface XmlAttribute: XmlNode


@property (readonly,assign) XmlNodeType NodeType;
@property (readonly,strong) XmlElement *OwnerElement;

@end

@interface XmlCharacterData: XmlNode

- (void)AppendData:(/* mapped */ NSString *)aValue;
- (void)DeleteData:(int32_t)Offset :(int32_t)Count;
- (void)InsertData:(int32_t)Offset :(/* mapped */ NSString *)aValue;
- (void)ReplaceData:(int32_t)Offset :(int32_t)Count :(/* mapped */ NSString *)WithValue;
- (/* mapped */ NSString *)Substring:(int32_t)Offset :(int32_t)Count;

@property (strong) /* mapped */ NSString *Data;
@property (readonly,assign) int32_t Length;

@end

@interface XmlCDataSection: XmlCharacterData


@property (readonly,strong) /* mapped */ NSString *Name;
@property (readonly,assign) XmlNodeType NodeType;
@property (readonly,strong) /* mapped */ NSString *LocalName;

@end

@interface XmlComment: XmlCharacterData


@property (readonly,strong) /* mapped */ NSString *Name;
@property (readonly,assign) XmlNodeType NodeType;
@property (readonly,strong) /* mapped */ NSString *LocalName;

@end

@interface XmlText: XmlCharacterData


@property (readonly,strong) /* mapped */ NSString *Name;
@property (readonly,assign) XmlNodeType NodeType;
@property (readonly,strong) /* mapped */ NSString *LocalName;

@end

@interface UserSettingsHelper: NSObject

+ (/* mapped */ NSString *)GetBundleIdentifier;

@end

@interface Group: NSObject

{
  int32_t fLength;
  int32_t fStart;
  NSString *fText;
};

- (id)init:(int32_t)aStart :(int32_t)aLength :(NSString *)aText;

@property (readonly,assign) int32_t End;
@property (readonly,assign) int32_t Length;
@property (readonly,assign) int32_t Start;
@property (readonly,strong) NSString *Text;

@end

@interface Match: NSObject

{
  NSString *fInput;
  NSTextCheckingResult *fMatch;
};

- (id)init:(NSTextCheckingResult *)PlatformMatch :(NSString *)Input;
- (Match *)FindNext;

@property (readonly,assign) int32_t End;
@property (readonly,strong) /* mapped */ NSMutableArray *Groups;
@property (readonly,assign) int32_t Length;
@property (readonly,assign) int32_t Start;
@property (readonly,strong) NSString *Text;

@end

@interface StringFormatter: NSObject

+ (/* mapped */ NSString *_Nonnull )FormatString:(/* mapped */ NSString *)aFormat :(NSObject * * /* dynamicarray */)args;

@end

@interface XmlDocument: XmlNode

- (void)AddChild:(XmlNode *)Node;
- (void)RemoveChild:(XmlNode *)Node;
- (void)ReplaceChild:(XmlNode *)Node :(XmlNode *)WithNode;
- (XmlAttribute *)CreateAttribute:(/* mapped */ NSString *)Name;
- (XmlAttribute *)CreateAttribute:(/* mapped */ NSString *)QualifiedName :(/* mapped */ NSString *)NamespaceUri;
- (XmlAttribute *)CreateXmlNs:(/* mapped */ NSString *)Prefix :(/* mapped */ NSString *)NamespaceUri;
- (XmlCDataSection *)CreateCDataSection:(/* mapped */ NSString *)Data;
- (XmlComment *)CreateComment:(/* mapped */ NSString *)Data;
- (XmlElement *)CreateElement:(/* mapped */ NSString *)Name;
- (XmlElement *)CreateElement:(/* mapped */ NSString *)QualifiedName :(/* mapped */ NSString *)NamespaceUri;
- (XmlProcessingInstruction *)CreateProcessingInstruction:(/* mapped */ NSString *)Target :(/* mapped */ NSString *)Data;
- (XmlText *)CreateTextNode:(/* mapped */ NSString *)Data;
- (XmlElement * * /* dynamicarray */)GetElementsByTagName:(/* mapped */ NSString *)Name;
- (XmlElement * * /* dynamicarray */)GetElementsByTagName:(/* mapped */ NSString *)LocalName :(/* mapped */ NSString *)NamespaceUri;
+ (XmlDocument *_Nonnull )FromFile:(/* mapped */ NSString *)aFile;
+ (XmlDocument *_Nonnull )FromBinary:(/* mapped */ NSMutableData *)aBinary;
+ (XmlDocument *_Nonnull )FromString:(/* mapped */ NSString *)aString;
+ (XmlDocument *_Nonnull )CreateDocument;
- (void)Save:(/* mapped */ NSString *)aFile;
- (void)Save:(/* mapped */ NSString *)aFile :(XmlDocumentDeclaration *)XmlDeclaration;
- (void)Save:(/* mapped */ NSString *)aFile :(/* mapped */ NSString *)Version :(/* mapped */ NSString *)Encoding :(BOOL)Standalone;
- (void)dealloc;

@property (readonly,strong) XmlElement *DocumentElement;
@property (readonly,strong) XmlDocumentType *DocumentType;
@property (readonly,assign) XmlNodeType NodeType;
@property (readonly,strong) XmlElement *Element;

@end

@interface XmlDocumentDeclaration: NSObject

- (id)init;
- (id)init:(/* mapped */ NSString *)aVersion :(/* mapped */ NSString *)anEncoding :(BOOL)aStandalone;

@property (strong) /* mapped */ NSString *Encoding;
@property (assign) BOOL Standalone;
@property (readonly,strong) /* mapped */ NSString *StandaloneString;
@property (strong) /* mapped */ NSString *Version;

@end

@interface JsonNode: NSObject

- (/* mapped */ NSString *)ToJson;
- (NSString *)description;
+ (JsonObject *)Create:(/* mapped */ NSMutableDictionary *)aValue;
+ (JsonArray *)Create:(/* mapped */ NSMutableArray *)aValue;
+ (JsonArray *)Create:(JsonNode * * /* dynamicarray */)aValue;
+ (JsonStringValue *)Create:(/* mapped */ NSString *)aValue;
+ (JsonFloatValue *)Create:(NSNumber *)aValue;
+ (JsonIntegerValue *)Create:(NSNumber *)aValue;
+ (JsonBooleanValue *)Create:(NSNumber *)aValue;

@property (readonly,assign) int32_t Count;
@property (strong) JsonNode *Item;
@property (strong) JsonNode *Item;
@property (nonnull,readonly,strong) /* mapped */ id<NSFastEnumeration> Keys;
@property (assign) int64_t IntegerValue;
@property (assign) double FloatValue;
@property (assign) BOOL BooleanValue;
@property (strong) /* mapped */ NSString *StringValue;

@end

@interface JsonObject: JsonNode </* mapped */ id<NSFastEnumeration>>

- (id)init;
- (id)init:(/* mapped */ NSMutableDictionary *)aItems;
- (void)Add:(/* mapped */ NSString *)Key :(JsonNode *)Value;
- (void)Clear;
- (BOOL)ContainsKey:(/* mapped */ NSString *)Key;
- (BOOL)Remove:(/* mapped */ NSString *)Key;
- (/* mapped */ NSString *)ToJson;
- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)aState objects:(KeyValuePair * *)stackbuf count:(NSUInteger)len;
+ (JsonObject *)Load:(/* mapped */ NSString *)JsonString;

@property (readonly,assign) int32_t Count;
@property (strong) JsonNode *Item;
@property (nonnull,readonly,strong) /* mapped */ id<NSFastEnumeration> Keys;
@property (readonly,strong) /* mapped */ id<NSFastEnumeration> Properties;

@end

@interface JsonTokenizer: NSObject

- (id)init:(/* mapped */ NSString *)aJson;
- (id)init:(/* mapped */ NSString *)aJson :(BOOL)SkipWhitespaces;
- (BOOL)Next;

@property (readonly,strong) /* mapped */ NSString *Json;
@property (readonly,assign) int32_t Row;
@property (readonly,assign) int32_t Column;
@property (strong) /* mapped */ NSString *Value;
@property (assign) JsonTokenKind Token;
@property (readonly,assign) BOOL IgnoreWhitespaces;

@end

@interface JsonStringValue: JsonValue

- (/* mapped */ NSString *)ToJson;
+ (JsonStringValue *)op_Implicit:(/* mapped */ NSString *_Nonnull )aValue;

@end

@interface JsonIntegerValue: JsonValue

- (/* mapped */ NSString *)ToJson;
+ (JsonIntegerValue *)op_Implicit:(int64_t)aValue;
+ (JsonIntegerValue *)op_Implicit:(int32_t)aValue;
+ (JsonFloatValue *)op_Implicit:(JsonIntegerValue *)aValue;
+ (int32_t_Nonnull )op_Implicit:(JsonIntegerValue *)aValue;
+ (double_Nonnull )op_Implicit:(JsonIntegerValue *)aValue;
+ (float_Nonnull )op_Implicit:(JsonIntegerValue *)aValue;

@end

@interface JsonFloatValue: JsonValue

- (/* mapped */ NSString *)ToJson;
+ (JsonFloatValue *)op_Implicit:(double)aValue;
+ (JsonFloatValue *)op_Implicit:(float)aValue;
+ (float)op_Implicit:(JsonFloatValue *)aValue;

@end

@interface JsonBooleanValue: JsonValue

- (/* mapped */ NSString *)ToJson;
+ (JsonBooleanValue *)op_Implicit:(BOOL)aValue;

@end

@interface XmlDocumentType: XmlNode


@property (readonly,strong) /* mapped */ NSString *PublicId;
@property (readonly,strong) /* mapped */ NSString *SystemId;
@property (readonly,assign) XmlNodeType NodeType;
@property (strong) /* mapped */ NSString *Value;
@property (readonly,strong) XmlNode *FirstChild;
@property (readonly,strong) XmlNode *LastChild;
@property (readonly,assign) int32_t ChildCount;
@property (readonly,assign) XmlNode * * /* dynamicarray */ ChildNodes;

@end

@interface XmlElement: XmlNode

- (void)AddChild:(XmlNode *)aNode;
- (void)RemoveChild:(XmlNode *)aNode;
- (void)ReplaceChild:(XmlNode *)aNode :(XmlNode *)WithNode;
- (/* mapped */ NSString *)GetAttribute:(/* mapped */ NSString *)aName;
- (/* mapped */ NSString *)GetAttribute:(/* mapped */ NSString *)aLocalName :(/* mapped */ NSString *)NamespaceUri;
- (XmlAttribute *)GetAttributeNode:(/* mapped */ NSString *)aName;
- (XmlAttribute *)GetAttributeNode:(/* mapped */ NSString *)aLocalName :(/* mapped */ NSString *)NamespaceUri;
- (void)SetAttribute:(/* mapped */ NSString *)aName :(/* mapped */ NSString *)aValue;
- (void)SetAttribute:(/* mapped */ NSString *)aLocalName :(/* mapped */ NSString *)NamespaceUri :(/* mapped */ NSString *)aValue;
- (void)SetAttributeNode:(XmlAttribute *)Node;
- (void)RemoveAttribute:(/* mapped */ NSString *)aName;
- (void)RemoveAttribute:(/* mapped */ NSString *)aLocalName :(/* mapped */ NSString *)NamespaceUri;
- (void)RemoveAttributeNode:(XmlAttribute *)Node;
- (BOOL)HasAttribute:(/* mapped */ NSString *)aName;
- (BOOL)HasAttribute:(/* mapped */ NSString *)aLocalName :(/* mapped */ NSString *)NamespaceUri;
- (XmlAttribute * * /* dynamicarray */)GetAttributes;
- (XmlElement * * /* dynamicarray */)GetElementsByTagName:(/* mapped */ NSString *)aName;
- (XmlElement * * /* dynamicarray */)GetElementsByTagName:(/* mapped */ NSString *)aLocalName :(/* mapped */ NSString *)NamespaceUri;
- (XmlElement *)GetFirstElementWithName:(/* mapped */ NSString *)aName;

@property (readonly,assign) XmlNodeType NodeType;
@property (readonly,strong) XmlAttribute *Attributes;

@end

@interface XmlNamespace: NSObject

- (id)init:(__struct__xmlNode *)Node;

@property (readonly,strong) /* mapped */ NSString *LocalName;
@property (readonly,strong) /* mapped */ NSString *Name;
@property (readonly,strong) /* mapped */ NSString *Uri;

@end

@interface XmlChar: NSObject

+ (/* mapped */ NSString *)ToString:(xmlChar *)Value :(BOOL)FreeWhenDone;
+ (xmlChar *)FromString:(/* mapped */ NSString *)Value;

@end

@interface XmlNodeList: NSObject

- (id)init:(XmlNode *)RootElement;
- (XmlElement * * /* dynamicarray */)ElementsByName:(/* mapped */ NSString *)Name;
- (XmlElement * * /* dynamicarray */)ElementsByName:(/* mapped */ NSString *)LocalName :(/* mapped */ NSString *)NamespaceUri;

@end

@interface XmlProcessingInstruction: XmlNode


@property (strong) /* mapped */ NSString *Data;
@property (readonly,strong) /* mapped */ NSString *Target;
@property (readonly,assign) XmlNodeType NodeType;

@end

@interface JsonDocument: NSObject

+ (JsonDocument *_Nonnull )FromFile:(/* mapped */ NSString *_Nonnull )aFile;
+ (JsonDocument *_Nonnull )FromBinary:(/* mapped */ NSMutableData *_Nonnull )aBinary :(/* mapped */ NSNumber *)aEncoding;
+ (JsonDocument *_Nonnull )FromString:(/* mapped */ NSString *_Nonnull )aString;
+ (JsonDocument *_Nonnull )CreateDocument;
- (id)init;
- (id)init:(JsonNode *_Nonnull )aRoot;
- (NSString *)description;
- (/* mapped */ NSString *)ToJson;

@property (nonnull,readonly,strong) JsonNode *Root;
@property (nonnull,readonly,strong) JsonObject *RootObject;
@property (strong) JsonNode *Item;
@property (nonnull,readonly,strong) /* mapped */ id<NSFastEnumeration> Keys;

@end

@interface SugarException: NSException

- (id)init;
- (id)init:(/* mapped */ NSString *)aMessage;
- (id)init:(/* mapped */ NSString *)aFormat :(NSObject * * /* dynamicarray */)aParams;
- (id)initWithError:(NSError *)aError;

@property (readonly,strong) /* mapped */ NSString *Message;

@end

@interface SugarUnexpectedTokenException: SugarException
@end

@interface SugarInvalidTokenException: SugarException
@end

@interface SugarInvalidValueException: SugarException
@end

@interface JsonArray: JsonNode </* mapped */ id<NSFastEnumeration>>

- (id)init;
- (id)init:(/* mapped */ NSMutableArray *)aItems;
- (void)Add:(JsonNode *)Value;
- (void)Insert:(int32_t)Index :(JsonNode *)Value;
- (void)Clear;
- (void)RemoveAt:(int32_t)Index;
- (/* mapped */ id<NSFastEnumeration>_Nonnull )ToStrings;
- (/* mapped */ NSMutableArray *_Nonnull )ToStringList;
- (/* mapped */ NSString *)ToJson;
- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)aState objects:(JsonNode * *)stackbuf count:(NSUInteger)len;
+ (JsonArray *)Load:(/* mapped */ NSString *)JsonString;

@property (readonly,assign) int32_t Count;
@property (strong) JsonNode *Item;

@end

@interface Type: NSObject

- (instancetype)initWithID;
- (instancetype)initWithClass:(Class)aClass;
- (instancetype)initWithProtocol:(id)aProtocol;
- (instancetype)initWithSimpleType:(NSString *)aTypeEncoding;

@property (readonly,strong) /* mapped */ NSMutableArray *Interfaces;
@property (readonly,strong) /* mapped */ NSMutableArray *Methods;
@property (readonly,strong) NSString *Name;
@property (readonly,strong) Type *BaseType;
@property (readonly,assign) BOOL IsClass;
@property (readonly,assign) BOOL IsInterface;
@property (readonly,assign) BOOL IsArray;
@property (readonly,assign) BOOL IsEnum;
@property (readonly,assign) BOOL IsValueType;

@end

@interface StackHelpers: NSObject

+ (id)Peek:(NSMutableArray *)aStack;
+ (id)Pop:(NSMutableArray *)aStack;

@end

@interface Consts: NSObject

+ (BOOL)IsNaN:(double)Value;
+ (BOOL)IsInfinity:(double)Value;
+ (BOOL)IsPositiveInfinity:(double)Value;
+ (BOOL)IsNegativeInfinity:(double)Value;
+ (int32_t)MaxInteger;
+ (int32_t)MinInteger;
+ (int64_t)MaxInt64;
+ (int64_t)MinInt64;
+ (int32_t)MaxChar;
+ (int32_t)MinChar;
+ (uint8_t)MaxByte;
+ (uint8_t)MinByte;
+ (double)MaxDouble;
+ (double)MinDouble;
+ (double)PositiveInfinity;
+ (double)NegativeInfinity;
+ (double)NaN;
+ (/* mapped */ NSString *_Nonnull )TrueString;
+ (/* mapped */ NSString *_Nonnull )FalseString;

@end

#define Consts_PI 3.14159265358979
#define Consts_E 2.71828182845905

@interface Convert: NSObject

+ (/* mapped */ NSString *_Nonnull )ToString:(BOOL)aValue;
+ (/* mapped */ NSString *_Nonnull )ToString:(uint8_t)aValue :(int32_t)aBase;
+ (/* mapped */ NSString *_Nonnull )ToString:(int32_t)aValue :(int32_t)aBase;
+ (/* mapped */ NSString *_Nonnull )ToString:(int64_t)aValue :(int32_t)aBase;
+ (/* mapped */ NSString *_Nonnull )ToString:(double)aValue :(int32_t)aDigitsAfterDecimalPoint :(/* mapped */ NSLocale *)aLocale;
+ (/* mapped */ NSString *_Nonnull )ToString:(wchar_t)aValue;
+ (/* mapped */ NSString *_Nonnull )ToString:(NSObject *)aValue;
+ (/* mapped */ NSString *_Nonnull )ToStringInvariant:(double)aValue :(int32_t)aDigitsAfterDecimalPoint;
+ (int32_t)ToInt32:(BOOL)aValue;
+ (int32_t)ToInt32:(uint8_t)aValue;
+ (int32_t)ToInt32:(int64_t)aValue;
+ (int32_t)ToInt32:(double)aValue;
+ (int32_t)ToInt32:(wchar_t)aValue;
+ (int32_t)ToInt32:(/* mapped */ NSString *_Nonnull )aValue;
+ (int64_t)ToInt64:(BOOL)aValue;
+ (int64_t)ToInt64:(uint8_t)aValue;
+ (int64_t)ToInt64:(int32_t)aValue;
+ (int64_t)ToInt64:(double)aValue;
+ (int64_t)ToInt64:(wchar_t)aValue;
+ (int64_t)ToInt64:(/* mapped */ NSString *_Nonnull )aValue;
+ (double)ToDouble:(BOOL)aValue;
+ (double)ToDouble:(uint8_t)aValue;
+ (double)ToDouble:(int32_t)aValue;
+ (double)ToDouble:(int64_t)aValue;
+ (double)ToDouble:(/* mapped */ NSString *_Nonnull )aValue :(/* mapped */ NSLocale *)aLocale;
+ (double)ToDoubleInvariant:(/* mapped */ NSString *_Nonnull )aValue;
+ (uint8_t)ToByte:(BOOL)aValue;
+ (uint8_t)ToByte:(double)aValue;
+ (uint8_t)ToByte:(int32_t)aValue;
+ (uint8_t)ToByte:(int64_t)aValue;
+ (uint8_t)ToByte:(wchar_t)aValue;
+ (uint8_t)ToByte:(/* mapped */ NSString *_Nonnull )aValue;
+ (wchar_t)ToChar:(BOOL)aValue;
+ (wchar_t)ToChar:(int32_t)aValue;
+ (wchar_t)ToChar:(int64_t)aValue;
+ (wchar_t)ToChar:(uint8_t)aValue;
+ (wchar_t)ToChar:(/* mapped */ NSString *_Nonnull )aValue;
+ (BOOL)ToBoolean:(double)aValue;
+ (BOOL)ToBoolean:(int32_t)aValue;
+ (BOOL)ToBoolean:(int64_t)aValue;
+ (BOOL)ToBoolean:(uint8_t)aValue;
+ (BOOL)ToBoolean:(/* mapped */ NSString *_Nonnull )aValue;
+ (/* mapped */ NSString *_Nonnull )ToHexString:(uint64_t)aValue :(int32_t)aWidth;
+ (/* mapped */ NSString *_Nonnull )ToHexString:(uint8_t * /* dynamicarray */)aData :(int32_t)aOffset :(int32_t)aCount;
+ (/* mapped */ NSString *_Nonnull )ToHexString:(uint8_t * /* dynamicarray */)aData :(int32_t)aCount;
+ (/* mapped */ NSString *_Nonnull )ToHexString:(uint8_t * /* dynamicarray */)aData;
+ (/* mapped */ NSString *_Nonnull )ToHexString:(/* mapped */ NSMutableData *)aData;
+ (/* mapped */ NSString *_Nonnull )ToOctalString:(int64_t)aValue :(int32_t)aWidth;
+ (/* mapped */ NSString *_Nonnull )ToBinaryString:(int64_t)aValue :(int32_t)aWidth;
+ (uint32_t)HexStringToInt32:(/* mapped */ NSString *_Nonnull )aValue;
+ (uint64_t)HexStringToInt64:(/* mapped */ NSString *_Nonnull )aValue;
+ (uint8_t * /* dynamicarray */)HexStringToByteArray:(/* mapped */ NSString *_Nonnull )aData;

@end

@interface MessageDigest: NSObject

- (id)init:(DigestAlgorithm)Algorithm;
- (void)Reset;
- (void)Update:(uint8_t * /* dynamicarray */)Data :(int32_t)Offset :(int32_t)Count;
- (void)Update:(uint8_t * /* dynamicarray */)Data :(int32_t)Count;
- (void)Update:(uint8_t * /* dynamicarray */)Data;
- (uint8_t * /* dynamicarray */)Digest:(uint8_t * /* dynamicarray */)Data :(int32_t)Offset :(int32_t)Count;
- (uint8_t * /* dynamicarray */)Digest:(uint8_t * /* dynamicarray */)Data :(int32_t)Count;
- (uint8_t * /* dynamicarray */)Digest:(uint8_t * /* dynamicarray */)Data;
+ (uint8_t * /* dynamicarray */)ComputeHash:(uint8_t * /* dynamicarray */)Data :(DigestAlgorithm)Algorithm;

@end

@interface DateFormatter: NSObject

+ (/* mapped */ NSString *)Format:(/* mapped */ NSString *)Value;

@end

@interface DateTimeHelpers: NSObject

+ (int32_t)GetComponent:(NSDate *)aSelf :(NSCalendarUnit)Component;
+ (/* mapped */ NSDate *)AdjustDate:(NSDate *)aSelf :(NSCalendarUnit)Component :(int32_t)Value;
+ (NSTimeZone *)LocalTimezone;
+ (void)setLocalTimezone:(NSTimeZone *)value;

@end

@interface RangeHelper: NSObject

+ (void)Validate:(/* mapped */ NSRange)aRange :(int32_t)BufferSize;

@end

@interface DictionaryHelpers: NSObject

+ (void)Add:(NSMutableDictionary *)aSelf :(id)aKey :(id)aVal;
+ (id)GetItem:(NSDictionary *)aSelf :(id)aKey;
+ (/* mapped */ id<NSFastEnumeration>)GetSequence:(NSDictionary *)aSelf;
+ (void)Foreach:(/* mapped */ NSMutableDictionary *)aSelf :(Action)aAction;

@end

@interface HashsetHelpers: NSObject

+ (void)Foreach:(/* mapped */ NSMutableSet *)aSelf :(Action)aAction;
+ (BOOL)IsSubsetOf:(/* mapped */ NSMutableSet *)aSelf :(/* mapped */ NSMutableSet *)aSet;

@end

@interface NullHelper: NSObject

+ (id)ValueOf:(id)Value;

@end

@interface ListHelpers: NSObject

+ (void)AddRange:(/* mapped */ NSMutableArray *)aSelf :(id * /* dynamicarray */)aArr;
+ (int32_t)FindIndex:(/* mapped */ NSMutableArray *)aSelf :(int32_t)StartIndex :(int32_t)aCount :(Predicate)Match;
+ (id)Find:(/* mapped */ NSMutableArray *)aSelf :(Predicate)Match;
+ (void)ForEach:(/* mapped */ NSMutableArray *)aSelf :(Action)Action;
+ (BOOL)TrueForAll:(/* mapped */ NSMutableArray *)aSelf :(Predicate)Match;
+ (/* mapped */ NSMutableArray *)FindAll:(/* mapped */ NSMutableArray *)aSelf :(Predicate)Match;
+ (void)InsertRange:(/* mapped */ NSMutableArray *)aSelf :(int32_t)Index :(id * /* dynamicarray */)Items;
+ (int32_t)LastIndexOf:(NSArray *)aSelf :(id)aItem;
+ (id * /* dynamicarray */)ToArray:(NSArray *)aSelf;
+ (id * /* dynamicarray */)ToArrayReverse:(NSArray *)aSelf;

@end

@interface EncodingHelpers: NSObject

+ (uint8_t * /* dynamicarray */)GetBytes:(/* mapped */ NSNumber *)aEncoding :(wchar_t * /* dynamicarray */)Value :(int32_t)Offset :(int32_t)Count;
+ (uint8_t * /* dynamicarray */)GetBytes:(/* mapped */ NSNumber *)aEncoding :(/* mapped */ NSString *)Value;
+ (wchar_t * /* dynamicarray */)GetChars:(/* mapped */ NSNumber *)aEncoding :(uint8_t * /* dynamicarray */)Value :(int32_t)Offset :(int32_t)Count;
+ (/* mapped */ NSString *)GetString:(/* mapped */ NSNumber *)aEncoding :(uint8_t * /* dynamicarray */)Value :(int32_t)Offset :(int32_t)Count;
+ (/* mapped */ NSNumber *)GetEncoding:(/* mapped */ NSString *)aName;

@end

@interface FolderHelper: NSObject

+ (BOOL)IsDirectory:(/* mapped */ NSString *)Value;

@end

@interface FolderUtils: NSObject

+ (void)Create:(/* mapped */ NSString *)FolderName;
+ (void)Delete:(/* mapped */ NSString *)FolderName;
+ (BOOL)Exists:(/* mapped */ NSString *)FolderName;
+ (/* mapped */ NSString * * /* dynamicarray */)GetFiles:(/* mapped */ NSString *)FolderName :(BOOL)AllFolders;
+ (/* mapped */ NSString * * /* dynamicarray */)GetFolders:(/* mapped */ NSString *)FolderName :(BOOL)AllFolders;

@end

@interface Path: NSObject

+ (/* mapped */ NSString *_Nonnull )ChangeExtension:(/* mapped */ NSString *_Nonnull )FileName :(/* mapped */ NSString *)NewExtension;
+ (/* mapped */ NSString *_Nonnull )Combine:(/* mapped */ NSString *_Nonnull )BasePath :(/* mapped */ NSString *_Nonnull )Path;
+ (/* mapped */ NSString *_Nonnull )Combine:(/* mapped */ NSString *_Nonnull )BasePath :(/* mapped */ NSString *_Nonnull )Path1 :(/* mapped */ NSString *_Nonnull )Path2;
+ (/* mapped */ NSString *)GetParentDirectory:(/* mapped */ NSString *_Nonnull )FileName;
+ (/* mapped */ NSString *_Nonnull )GetExtension:(/* mapped */ NSString *_Nonnull )FileName;
+ (/* mapped */ NSString *_Nonnull )GetFileName:(/* mapped */ NSString *_Nonnull )FileName;
+ (/* mapped */ NSString *_Nonnull )GetFileNameWithoutExtension:(/* mapped */ NSString *_Nonnull )FileName;
+ (/* mapped */ NSString *_Nonnull )GetFullPath:(/* mapped */ NSString *_Nonnull )RelativePath;
+ (wchar_t)DirectorySeparatorChar;

@end

@interface Random: NSObject

- (id)init;
- (id)init:(uint64_t)aSeed;
- (int32_t)NextInt;
- (int32_t)NextInt:(int32_t)MaxValuePlusOne;
- (double)NextDouble;

@end

#define Random_Multiplier 25214903917
#define Random_Temp 1
#define Random_Mask 281474976710655

@interface MethodInfo: NSObject

- (instancetype)initWithClass:(Type *)aClass method:(Method)aMethod;

@property (readonly,strong) NSString *Name;
@property (readonly,assign) SEL Selector;
@property (readonly,strong) Type *ReturnType;
@property (readonly,assign) BOOL IsStatic;
@property (readonly,assign) BOOL IsPublic;
@property (readonly,assign) BOOL IsPrivate;
@property (readonly,assign) BOOL IsFinal;
@property (readonly,assign) BOOL IsAbstract;
@property (readonly,assign) ParameterInfo * * /* dynamicarray */ Parameters;

@end

@interface ParameterInfo: NSObject

- (instancetype)initWithIndex:(int32_t)aPosition type:(Type *)aType;

@property (readonly,strong) NSString *Name;
@property (readonly,assign) int32_t Position;
@property (readonly,strong) Type *ParameterType;
@property (readonly,assign) NSObject * * /* dynamicarray */ CustomAttributes;

@end

@interface FileUtils: NSObject

+ (void)Copy:(/* mapped */ NSString *)SourceFileName :(/* mapped */ NSString *)DestFileName;
+ (void)Create:(/* mapped */ NSString *)FileName;
+ (void)Delete:(/* mapped */ NSString *)FileName;
+ (BOOL)Exists:(/* mapped */ NSString *)FileName;
+ (void)Move:(/* mapped */ NSString *)SourceFileName :(/* mapped */ NSString *)DestFileName;
+ (void)AppendText:(/* mapped */ NSString *)FileName :(/* mapped */ NSString *)Content;
+ (void)AppendBytes:(/* mapped */ NSString *)FileName :(uint8_t * /* dynamicarray */)Content;
+ (void)AppendBinary:(/* mapped */ NSString *)FileName :(/* mapped */ NSMutableData *)Content;
+ (/* mapped */ NSString *)ReadText:(/* mapped */ NSString *)FileName :(/* mapped */ NSNumber *)Encoding;
+ (uint8_t * /* dynamicarray */)ReadBytes:(/* mapped */ NSString *)FileName;
+ (/* mapped */ NSMutableData *)ReadBinary:(/* mapped */ NSString *)FileName;
+ (void)WriteBytes:(/* mapped */ NSString *)FileName :(uint8_t * /* dynamicarray */)Content;
+ (void)WriteText:(/* mapped */ NSString *)FileName :(/* mapped */ NSString *)Content;
+ (void)WriteBinary:(/* mapped */ NSString *)FileName :(/* mapped */ NSMutableData *)Content;

@end

@interface Environment: NSObject

+ (/* mapped */ NSString *)GetEnvironmentVariable:(/* mapped */ NSString *)Name;
+ (/* mapped */ NSString *)CurrentDirectory;
+ (/* mapped */ NSString *)NewLine;
+ (/* mapped */ NSString *)UserName;
+ (OperatingSystem)OS;
+ (/* mapped */ NSString *)OSName;
+ (/* mapped */ NSString *)OSVersion;
+ (TargetPlatform)TargetPlatform;
+ (/* mapped */ NSString *)TargetPlatformName;
+ (CompilerMode)CompilerMode;
+ (CompilerSubMode)CompilerSubMode;
+ (NSObject *)ApplicationContext;
+ (void)setApplicationContext:(NSObject *)value;

@end

@interface SugarNotImplementedException: SugarException
@end

@interface SugarNotSupportedException: SugarException
@end

@interface SugarArgumentException: SugarException
@end

@interface SugarArgumentNullException: SugarArgumentException

- (id)init:(/* mapped */ NSString *)aMessage;
+ (void)RaiseIfNil:(NSObject *)Value :(/* mapped */ NSString *)Name;

@end

@interface SugarArgumentOutOfRangeException: SugarArgumentException
@end

@interface SugarFormatException: SugarException
@end

@interface SugarIOException: SugarException
@end

@interface SugarFileNotFoundException: SugarException

- (id)init:(/* mapped */ NSString *)aFileName;

@property (readonly,strong) /* mapped */ NSString *FileName;

@end

@interface SugarStackEmptyException: SugarException
@end

@interface SugarInvalidOperationException: SugarException
@end

@interface SugarKeyNotFoundException: SugarException

- (id)init;

@end

@interface SugarAppContextMissingException: SugarException

+ (void)RaiseIfMissing;

@end

@interface SugarNSErrorException: SugarException

- (id)init:(NSError *)Error;

@end

@interface ErrorMessage: NSObject


@end

#define ErrorMessage_FORMAT_ERROR @"Input string was not in a correct format"
#define ErrorMessage_OUT_OF_RANGE_ERROR @"Range ({0},{1}) exceeds data length {2}"
#define ErrorMessage_NEGATIVE_VALUE_ERROR @"{0} can not be negative"
#define ErrorMessage_ARG_OUT_OF_RANGE_ERROR @"{0} argument was out of range of valid values."
#define ErrorMessage_ARG_NULL_ERROR @"Argument {0} can not be nil"
#define ErrorMessage_TYPE_RANGE_ERROR @"Specified value exceeds range of {0}"
#define ErrorMessage_COLLECTION_EMPTY @"Collection is empty"
#define ErrorMessage_KEY_NOTFOUND @"Entry with specified key does not exist"
#define ErrorMessage_KEY_EXISTS @"An element with the same key already exists in the dictionary"
#define ErrorMessage_FILE_EXISTS @"File {0} already exists"
#define ErrorMessage_FILE_NOTFOUND @"File {0} not found"
#define ErrorMessage_FILE_WRITE_ERROR @"File {0} can not be written"
#define ErrorMessage_FILE_READ_ERROR @"File {0} can not be read"
#define ErrorMessage_FOLDER_EXISTS @"Folder {0} already exists"
#define ErrorMessage_FOLDER_NOTFOUND @"Folder {0} not found"
#define ErrorMessage_FOLDER_CREATE_ERROR @"Unable to create folder {0}"
#define ErrorMessage_FOLDER_DELETE_ERROR @"Unable to delete folder {0}"
#define ErrorMessage_IO_RENAME_ERROR @"Unable to reanme {0} to {1}"
#define ErrorMessage_APP_CONTEXT_MISSING @"Environment.ApplicationContext is not set."
#define ErrorMessage_NOTSUPPORTED_ERROR @"{0} is not supported on current platform"

@interface Guid: NSObject

- (id)init;
- (id)init:(uint8_t * /* dynamicarray */)Value;
- (int32_t)CompareTo:(Guid *)Value;
- (BOOL)Equals:(Guid *)Value;
+ (Guid *)NewGuid;
+ (Guid *)Parse:(/* mapped */ NSString *)Value;
+ (Guid *)EmptyGuid;
+ (Guid *)Empty;
- (uint8_t * /* dynamicarray */)ToByteArray;
- (/* mapped */ NSString *)ToString:(GuidFormat)Format;
- (NSString *)description;

@end

@interface HttpRequest: NSObject

- (id)init:(/* mapped */ NSURL *_Nonnull )aUrl;
- (id)init:(/* mapped */ NSURL *_Nonnull )aUrl :(HttpRequestMode)aMode;
+ (HttpRequest *)op_Implicit:(/* mapped */ NSURL *_Nonnull )aUrl;
- (/* mapped */ NSString *)ToString;
- (NSString *)description;

@property (assign) HttpRequestMode Mode;
@property (nonnull,readonly,strong) /* mapped */ NSMutableDictionary *Headers;
@property (strong) HttpRequestContent *Content;
@property (nonnull,strong) /* mapped */ NSURL *Url;
@property (assign) BOOL FollowRedirects;
@property (assign) BOOL AllowCellularAccess;

@end

@interface HttpRequestContent: NSObject

+ (HttpRequestContent *)op_Implicit:(/* mapped */ NSMutableData *_Nonnull )aBinary;
+ (HttpRequestContent *)op_Implicit:(/* mapped */ NSString *_Nonnull )aString;

@end

@interface HttpBinaryRequestContent: HttpRequestContent <@protocol __anonymous0
- (/* mapped */ NSMutableData *)GetContentAsBinary;
- (uint8_t * /* dynamicarray */)GetContentAsArray;
@end

>

- (/* mapped */ NSMutableData *)GetContentAsBinary;
- (uint8_t * /* dynamicarray */)GetContentAsArray;
- (id)init:(/* mapped */ NSMutableData *_Nonnull )aBinary;
- (id)init:(uint8_t * /* dynamicarray */_Nonnull )aArray;
- (id)init:(/* mapped */ NSString *_Nonnull )aString :(/* mapped */ NSNumber *)aEncoding;

@end

@interface HttpResponse: NSObject

- (void)GetContentAsString:(/* mapped */ NSNumber *)aEncoding :(HttpContentResponseBlock_Nonnull )contentCallback;
- (void)GetContentAsBinary:(HttpContentResponseBlock_Nonnull )contentCallback;
- (void)GetContentAsXml:(HttpContentResponseBlock_Nonnull )contentCallback;
- (void)GetContentAsJson:(HttpContentResponseBlock_Nonnull )contentCallback;
- (void)SaveContentAsFile:(/* mapped */ NSString *)aTargetFile :(HttpContentResponseBlock_Nonnull )contentCallback;
- (/* mapped */ NSString *_Nonnull )GetContentAsStringSynchronous:(/* mapped */ NSNumber *)aEncoding;
- (/* mapped */ NSMutableData *_Nonnull )GetContentAsBinarySynchronous;
- (XmlDocument *_Nonnull )GetContentAsXmlSynchronous;
- (JsonDocument *_Nonnull )GetContentAsJsonSynchronous;

@property (nonnull,readonly,strong) /* mapped */ NSMutableDictionary *Headers;
@property (readonly,assign) int32_t Code;
@property (readonly,assign) BOOL Success;
@property (strong) NSException *Exception;

@end

@interface Http: NSObject

+ (void)ExecuteRequest:(HttpRequest *_Nonnull )aRequest :(HttpResponseBlock_Nonnull )ResponseCallback;
+ (HttpResponse *_Nonnull )ExecuteRequestSynchronous:(HttpRequest *_Nonnull )aRequest;
+ (void)ExecuteRequestAsString:(/* mapped */ NSNumber *)aEncoding :(HttpRequest *_Nonnull )aRequest :(HttpContentResponseBlock_Nonnull )contentCallback;
+ (void)ExecuteRequestAsBinary:(HttpRequest *_Nonnull )aRequest :(HttpContentResponseBlock_Nonnull )contentCallback;
+ (void)ExecuteRequestAsXml:(HttpRequest *_Nonnull )aRequest :(HttpContentResponseBlock_Nonnull )contentCallback;
+ (void)ExecuteRequestAsJson:(HttpRequest *_Nonnull )aRequest :(HttpContentResponseBlock_Nonnull )contentCallback;
+ (void)ExecuteRequestAndSaveAsFile:(HttpRequest *_Nonnull )aRequest :(/* mapped */ NSString *_Nonnull )aTargetFile :(HttpContentResponseBlock_Nonnull )contentCallback;
+ (/* mapped */ NSString *_Nonnull )GetString:(/* mapped */ NSNumber *)aEncoding :(HttpRequest *_Nonnull )aRequest;
+ (/* mapped */ NSMutableData *_Nonnull )GetBinary:(HttpRequest *_Nonnull )aRequest;
+ (XmlDocument *_Nonnull )GetXml:(HttpRequest *_Nonnull )aRequest;
+ (JsonDocument *_Nonnull )GetJson:(HttpRequest *_Nonnull )aRequest;

@end

@interface Sugar_Linq__Extensions: NSObject

+ (BOOL)Contains:(/* mapped */ id<NSFastEnumeration>)self :(id)arg;
+ (/* mapped */ NSMutableArray *_Nonnull )ToList:(id<NSFastEnumeration>)self;
+ (/* mapped */ NSMutableArray *_Nonnull )ToList:(/* mapped */ id<NSFastEnumeration>)self;
+ (/* mapped */ NSMutableDictionary *_Nonnull )ToDictionary:(id<NSFastEnumeration>)self :(IDBlock)aKeyBlock :(IDBlock)aValueBlock;

@end


// Globals 

